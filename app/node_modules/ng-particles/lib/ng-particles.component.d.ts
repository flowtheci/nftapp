import { AfterViewInit, EventEmitter } from '@angular/core';
import type { Container, Engine } from 'tsparticles';
import { IParticlesProps } from './ng-particles.module';
import * as ɵngcc0 from '@angular/core';
export declare class NgParticlesComponent implements AfterViewInit {
    options?: IParticlesProps;
    url?: string;
    id: string;
    particlesLoaded: EventEmitter<Container>;
    particlesInit: EventEmitter<Engine>;
    ngAfterViewInit(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<NgParticlesComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<NgParticlesComponent, "ng-particles", never, { "options": "options"; "url": "url"; "id": "id"; }, { "particlesLoaded": "particlesLoaded"; "particlesInit": "particlesInit"; }, never, never>;
}
export declare class ParticlesComponent extends NgParticlesComponent {
    options?: IParticlesProps;
    url?: string;
    id: string;
    particlesLoaded: EventEmitter<Container>;
    particlesInit: EventEmitter<Engine>;
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ParticlesComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ParticlesComponent, "Particles", never, { "options": "options"; "url": "url"; "id": "id"; }, { "particlesLoaded": "particlesLoaded"; "particlesInit": "particlesInit"; }, never, never>;
}

//# sourceMappingURL=ng-particles.component.d.ts.map